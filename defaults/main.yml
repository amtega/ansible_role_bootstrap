---
# Role default lower priority variables

# Enable bootstrap. This role may have important consecuences, so by default is
# disabled.

bootstrap_enable: no

# Indicate if the bootstrap process must provisione local users for
# ansible_user and ansible_become_user specified in the host inventory.

bootstrap_provisone_ansible_user: yes
bootstrap_provisone_ansible_become_user: yes

# Deploy ssh authorized keys

bootstrap_provisione_ssh_authorized_keys: yes

# Ensure ansible user home directory exists. This is necessary if you want to
# deploy ssh keys

bootstrap_create_ansible_user_home: >-
  {{ bootstrap_provisione_ssh_authorized_keys }}

# Ansible connection settings to use when bootstrapping the server. Take note
# that this are not the users you want to exist after bootstrapping. The final
# users that will provisioned after the bootstrap process are the ones specified
# in the host inventory using ansible_user and ansible_become_user variables
# (with their respective passwords). The users specified here only are used to
# bootstrap the host.

bootstrap_ansible_user: root
bootstrap_ansible_password: ""
bootstrap_become: no
bootstrap_become_method: su
bootstrap_become_user: root
bootstrap_become_pass: ""
bootstrap_ansible_ssh_common_args: ""

# Group and shell of the ansible/become users to setup as part of the bootstrap
# process.

bootstrap_ansible_user_group: users
bootstrap_ansible_user_shell: /bin/bash
bootstrap_ansible_become_user_group: users
bootstrap_ansible_become_user_shell: /bin/bash

# Python interpreter to use by bootstrap

# bootstrap_ansible_python_interpreter:

#
# Python virtual env configuration.
#
# bootstrap_python_virtualenv:
# bootstrap_python_virtualenv_command:
# bootstrap_python_virtualenv_python:
# bootstrap_python_virtualenv_site_packages:

# Hide sensitive information

bootstrap_no_log: yes
