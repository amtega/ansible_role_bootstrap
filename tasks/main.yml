---
# Bootstrap the server to use ansible

- name: Gather facts
  block:
    - ansible.builtin.include_tasks: ansible_facts.yml
      when: not ansible_local.bootstrap.date is defined
  rescue:
    - name: Empty task placeholder
      ansible.builtin.meta: noop
  vars:
    ansible_user: "{{ bootstrap_ansible_user }}"
    ansible_password: "{{ bootstrap_ansible_password }}"
    ansible_become: "{{ bootstrap_become | default(false) }}"
    ansible_become_method: "{{ bootstrap_become_method | default('su') }}"
    ansible_become_user: "{{ bootstrap_become_user | default('root') }}"
    ansible_become_pass: "{{ bootstrap_become_pass | default('') }}"
    ansible_ssh_common_args: "{{ bootstrap_ansible_ssh_common_args }}"
  tags:
    - role::bootstrap

- name: Bootstrap host
  block:
    - name: Gather ansible connection basic facts
      include_tasks: facts_basic.yml

    - name: Perform bootstrap tasks
      block:
        - name: Setup python
          include_tasks: install.yml

        - name: Gather ansible connection basic facts
          include_tasks: facts_extended.yml

        - name: Setup users, authorized keys and python virtualenv
          block:
            - name: Setup ansible users
              include_tasks: users.yml

            - name: Setup ssh authorized keys
              include_tasks: authorized_keys.yml

            - name: Setup python virtualenv
              include_tasks: virtualenv.yml

            - name: Reload facts
              ansible.builtin.setup:
              when:
                - bootstrap_reload_facts | bool
                - >-
                  bootstrap_install_python_result is changed
                  or bootstrap_setup_venv_result is changed

            - name: Setup local fact
              include_tasks: local_fact.yml
      vars:
        ansible_user: "{{ bootstrap_ansible_user }}"
        ansible_password: "{{ bootstrap_ansible_password }}"
        ansible_become: "{{ bootstrap_become | default(false) }}"
        ansible_become_method: "{{ bootstrap_become_method | default('su') }}"
        ansible_become_user: "{{ bootstrap_become_user | default('root') }}"
        ansible_become_pass: "{{ bootstrap_become_pass | default('') }}"
        ansible_ssh_common_args: "{{ bootstrap_ansible_ssh_common_args }}"
        ansible_python_interpreter: >-
          {{ bootstrap_ansible_python_interpreter
             | default(
                 (bootstrap_distribution_version is version("8", "<"))
                 | ternary("/usr/bin/python",
                           "/usr/bin/python3")) }}
  when: bootstrap_enable | bool and bootstrap_require_run
  vars:
    bootstrap_current_date: "{{ '%Y-%m-%d %H:%M:%S' | strftime }}"

    bootstrap_last_date: >-
      {{ ansible_local.bootstrap.date
         | default(bootstrap_current_date) }}

    bootstrap_seconds_since_last: >-
      {{ (bootstrap_current_date | to_datetime
          - bootstrap_last_date | to_datetime)
         .total_seconds() }}

    bootstrap_require_run: >-
      {{ (bootstrap_seconds_to_run | int > 0)
         | ternary(bootstrap_seconds_since_last | int
                   > bootstrap_seconds_to_run | int
                   or bootstrap_seconds_since_last | int == 0,
                   true) }}
  tags:
    - role::bootstrap
